{
  "name": "从北交所查找特定主题或者行业的公司并将数据发送到邮箱",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "66561e84-ffe2-4a84-9fb2-828c1d340f1e",
              "leftValue": "={{ $json.data.has_more }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -368,
        112
      ],
      "id": "47d6bade-bc34-445e-af67-558832fc8b3f",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst offset = $input.first().json.data.items.length\n\nreturn {'offset': offset * ($runIndex+1)};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -144,
        112
      ],
      "id": "aab41a1b-44dd-4526-bfe4-dae4c8e04e98",
      "name": "Get Offset"
    },
    {
      "parameters": {
        "amount": 6
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        80,
        256
      ],
      "id": "a11a4eef-8f05-4ca6-bae8-d59ab892fc6e",
      "name": "Wait",
      "webhookId": "e95caa30-b318-4ca4-b464-903ef5bebc03"
    },
    {
      "parameters": {
        "options": {
          "headerRow": true
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1296,
        -208
      ],
      "id": "3f4c929d-147d-4a90-bde5-536d77f5d3c9",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "jsCode": "/** @type {Array<{request_id: string, code: number, data: JSON, msg: string}>} */\nlet results = [];\nlet i = 0;\nlet hasMoreData = true;\n\nwhile (hasMoreData) {\n  try {\n    const newData = $(\"Tushare-StockInfo\").all(0, i);\n    if (newData && newData.length > 0) {\n      // @ts-ignore\n      results = results.concat(newData);\n      i++;\n    } else {\n      hasMoreData = false;\n    }\n  } catch (error) {\n    hasMoreData = false;\n  }\n}\n// @ts-ignore Get Fields\nconst fileds = results[0].json.data.fields\n// @ts-ignore\nconst datas = results.flatMap(item => item.json.data.items);\nconst final_data = {'fields':fileds, 'datas':datas};\n\n// Convert Data -> Array<Object>\nlet final_result = [];\nfor (const entry of final_data.datas) {\n    let mapped_item = {};\n    for (let i = 0; i < final_data.fields.length; i++) {\n        // @ts-ignore\n        mapped_item[final_data.fields[i]] = entry[i];\n    }\n    final_result.push(mapped_item);\n}\n// @ts-ignore\nreturn final_result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -144,
        -80
      ],
      "id": "65a9b818-7c97-451f-b329-8e1670d434ea",
      "name": "Combine All Data"
    },
    {
      "parameters": {
        "apiName": "stock_company",
        "params": {
          "parameters": {
            "individualParams": {
              "parameter": [
                {
                  "key": "exchange",
                  "value": "BSE"
                },
                {
                  "key": "offset",
                  "value": "={{ $json.offset || 0}}"
                },
                {
                  "key": "limit",
                  "value": "=300"
                }
              ]
            }
          }
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-tushare.tushare",
      "typeVersion": 1,
      "position": [
        -592,
        208
      ],
      "id": "089bb926-0a32-43c3-b6fb-735a16f478e0",
      "name": "Tushare-StockInfo",
      "credentials": {
        "tushareApi": {
          "id": "ohNqE0FWsh5O26bj",
          "name": "Tushare account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        80,
        -80
      ],
      "id": "ddcfbe29-bef2-46fc-b828-349500a6437d",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        784,
        368
      ],
      "id": "48a84c30-4437-4c17-a2fe-7b0e13754d0a",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "p8OmPKktp7aI68cX",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**角色**：你是一名精通中国行业分类的金融分析师，专门处理北交所上市公司数据。  \n**任务**：基于公司简介和主营业务，判断该公司是否属于用户指定的行业主题。  \n\n### 输入数据\n1. 公司信息（JSON格式）：\n{\n  \"ts_code\": \"公司代码\",\n  \"com_name\": \"公司名称\",\n  \"introduction\": \"公司简介\",\n  \"main_business\": \"主营业务\"\n}\n2. 用户指定主题：\"用户输入的指定主题或行业\"  \n\n### 判断规则\n- 仅当同时满足以下条件时输出`true`：\n  a) 主营业务或描述中明确包含用户指定主题相关的核心关键词  \n  b) 该业务属于公司收入主要来源（非边缘业务）  \n  c) 符合《上市公司行业分类指引》中该主题的定义  \n- 出现以下任一情况则输出`false`：\n  - 仅在描述中模糊提及主题但无具体业务支撑  \n  - 公司业务属于主题的边缘关联产业（如指定\"芯片\"但公司仅做芯片封装测试）  \n  - 存在主题关键词但实际业务无关（如公司名含\"光伏\"但业务是房地产）  \n\n### 输出要求\n- 仅输出公司代码和分类结果\n- 禁止任何解释、标点或额外文本\n\n### 示例\n案例1  \n输入主题：\"光伏\"  \n公司信息：{ main_business: \"单晶硅太阳能电池片研发制造\" }  \n输出：{\"code\":\"code1\",\"result\":true}  \n\n案例2  \n输入主题：\"人工智能\"  \n公司信息：{ description: \"利用AI优化生产线\"，main_business: \"机床设备制造\" }  \n输出：{\"code\":\"code1\",\"result\":false}  \n\n现在请处理新请求：  \n公司信息：{\n  \"ts_code\": {{ $json.ts_code }},\n  \"com_name\": {{ $json.com_name }},\n  \"introduction\": {{ $json.introduction }},\n  \"main_business\": {{ $json.main_business }}\n}  \n指定主题：\"固态电池产业链\"\n输出：",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        336,
        16
      ],
      "id": "d87664a7-85e2-44f0-8108-38f78a064a5f",
      "name": "Base LLM Chain 分类"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"code\": \"000001.SZ\",\n\t\"result\": true\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        400,
        368
      ],
      "id": "965d4a0d-8336-4d04-92a1-3ec42d62a342",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        416,
        -144
      ],
      "id": "5465fe36-83f4-40f8-ad45-9a168a1bc69b",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nconst data = {\"data1\":$input.all(),\"data2\":$(\"Combine All Data\").all()};\n\nconst resultList = [];\n\n// 遍历 data1 中的每个条目\nfor (const item of data.data1) {\n  // 确保条目中包含数据数组\n  if (item.json && Array.isArray(item.json.data)) {\n    // 遍历数据数组中的每个元素\n    for (const dataItem of item.json.data) {\n      // 确保元素包含有效的output对象\n      if (dataItem.output && dataItem.output.code) {\n        // 在 data2 中查找匹配的条目\n        const matchedData2 = data.data2.find(d2 => \n          d2.json && d2.json.ts_code === dataItem.output.code\n        );\n        \n        // 如果找到匹配项\n        if (matchedData2 && matchedData2.json) {\n          // 创建一个新的关联对象 (map)\n          const newMap = {\n            ts_code: matchedData2.json.ts_code,\n            com_name: matchedData2.json.com_name,\n            chairman: matchedData2.json.chairman,\n            manager: matchedData2.json.manager,\n            secretary: matchedData2.json.secretary,\n            reg_capital: matchedData2.json.reg_capital,\n            setup_date: matchedData2.json.setup_date,\n            province: matchedData2.json.province,\n            city: matchedData2.json.city,\n            introduction: matchedData2.json.introduction,\n            website: matchedData2.json.website,\n            email: matchedData2.json.email,\n            office: matchedData2.json.office,\n            employees: matchedData2.json.employees,\n            main_business: matchedData2.json.main_business,\n            exchange: matchedData2.json.exchange,\n            ...dataItem.output    // 包含 output 的所有字段\n          };\n          resultList.push(newMap); // 添加到结果数组\n        }\n      }\n    }\n  }\n}\n\nreturn {'final_data':resultList};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        -144
      ],
      "id": "3faee3db-a1ad-4edb-a705-245ba8a6ac28",
      "name": "Code - 处理推送数据"
    },
    {
      "parameters": {
        "fromEmail": "yanchaoma@foxmail.com",
        "toEmail": "yanchaoma@foxmail.com",
        "subject": "=n8n信息推送：从北交所查找到【{{ $('聊天框中输入行业或主题').item.json.chatInput }}】相关的公司列表",
        "emailFormat": "text",
        "text": "={{ $json.final_data.toJsonString() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1168,
        -48
      ],
      "id": "9f59c04d-b4f7-43d1-b1cf-ab20730b1b12",
      "name": "Send email",
      "webhookId": "e917329f-b766-4213-a185-7317403577de",
      "credentials": {
        "smtp": {
          "id": "BLNGgayXoXs7C44O",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "88d98eb0-b4bc-4072-9503-0e77c9375b9b",
              "leftValue": "={{ $json.final_data[1].result }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        848,
        -144
      ],
      "id": "b9a511b9-07c9-4658-9e5e-70b772c8764b",
      "name": "Filter"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -816,
        208
      ],
      "id": "73266c45-04ea-4b2b-88cc-ec2e9089a9d2",
      "name": "聊天框中输入行业或主题",
      "webhookId": "e407bda1-29b8-45ff-b20b-2072d59ef858"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=请根据用户<用户问题查询的主题或行业>和<相关结果>，生成一段看似合理且流畅的文字回复！\n回复的内容主要是告诉用户和当前主题或行业相关的公司是给出的这些，如果有额外信息的话也可以告诉用户公司的基本情况信息（这是可选的）。\n\n用户问题查询的主题或行业：\n{{ $('聊天框中输入行业或主题').item.json.chatInput }}\n\n相关结果：\n{{ $json.final_data.toJsonString() }}\n\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1072,
        112
      ],
      "id": "70d8f6ca-a371-46e1-9885-4bfa14af63f0",
      "name": "Final Output To Chat"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1632,
        -128
      ],
      "id": "d69ba138-c7e1-41c0-97c6-8b476cb4c851",
      "name": "结束"
    },
    {
      "parameters": {
        "jsCode": "return $input.first().json.final_data"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1104,
        -208
      ],
      "id": "3a1f83d5-fd0e-4945-bd53-382064dee657",
      "name": "Format To CSV"
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Get Offset",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Combine All Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Offset": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Tushare-StockInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine All Data": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tushare-StockInfo": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Base LLM Chain 分类",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Base LLM Chain 分类",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Final Output To Chat",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Base LLM Chain 分类": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Base LLM Chain 分类",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Code - 处理推送数据",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code - 处理推送数据": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Send email",
            "type": "main",
            "index": 0
          },
          {
            "node": "Format To CSV",
            "type": "main",
            "index": 0
          },
          {
            "node": "Final Output To Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send email": {
      "main": [
        [
          {
            "node": "结束",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "聊天框中输入行业或主题": {
      "main": [
        [
          {
            "node": "Tushare-StockInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Final Output To Chat": {
      "main": [
        [
          {
            "node": "结束",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "结束",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format To CSV": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "560cf8c6-0cc7-459c-8a79-46e1ee6e8b96",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b496150841483df09747a25f479a6e6cb04c07854a3a873184d83eedf527a4e8"
  },
  "id": "MqYybfCUlw9lzZO4",
  "tags": []
}